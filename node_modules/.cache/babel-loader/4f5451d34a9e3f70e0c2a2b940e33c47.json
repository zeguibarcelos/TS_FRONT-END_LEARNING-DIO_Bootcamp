{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\zetub\\\\Documents\\\\React\\\\desafio-diobank\\\\src\\\\components\\\\AppContext.tsx\",\n  _s = $RefreshSig$();\nimport { createContext, useEffect, useState } from \"react\";\nimport { getAllLocalStorage } from \"../services/storage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AppContext = /*#__PURE__*/createContext({});\nexport const AppContextProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [user, setUser] = useState('');\n  const [senha, setSenha] = useState('');\n  const storage = getAllLocalStorage();\n  useEffect(() => {\n    if (storage) {\n      const {\n        login\n      } = JSON.parse(storage); //converte uma string para um objeto\n      setIsLoggedIn(login);\n      const {\n        email\n      } = JSON.parse(storage);\n      setUser(email);\n      const {\n        senha\n      } = JSON.parse(storage);\n      setUser(senha);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n    value: {\n      user,\n      senha,\n      isLoggedIn,\n      setIsLoggedIn\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 7\n  }, this);\n};\n_s(AppContextProvider, \"S0Hl+ERV32h1nrjuNDwhjR/Dr0o=\");\n_c = AppContextProvider;\nvar _c;\n$RefreshReg$(_c, \"AppContextProvider\");","map":{"version":3,"names":["createContext","useEffect","useState","getAllLocalStorage","AppContext","AppContextProvider","children","isLoggedIn","setIsLoggedIn","user","setUser","senha","setSenha","storage","login","JSON","parse","email"],"sources":["C:/Users/zetub/Documents/React/desafio-diobank/src/components/AppContext.tsx"],"sourcesContent":["import { createContext, useEffect, useState } from \"react\"\r\nimport { getAllLocalStorage } from \"../services/storage\"\r\n\r\ninterface IAppContext {\r\n    user: string,\r\n    senha: string,\r\n    isLoggedIn: boolean, //estado global\r\n    setIsLoggedIn: (isLoggedIn: boolean) => void\r\n  }\r\n  \r\n  export const AppContext = createContext({} as IAppContext)\r\n  \r\n  \r\n  export const AppContextProvider = ({children}: any) =>{\r\n\r\n    const [isLoggedIn, setIsLoggedIn] = useState<boolean>(false)\r\n    const [user, setUser] = useState<string>('')\r\n    const [senha, setSenha] = useState<string>('')\r\n    \r\n    const storage = getAllLocalStorage()\r\n\r\n    \r\n\r\n    useEffect(() => { \r\n\r\n      if(storage){\r\n        const {login} =  JSON.parse(storage)  //converte uma string para um objeto\r\n        setIsLoggedIn(login)\r\n        const {email} = JSON.parse(storage)      \r\n        setUser(email)  \r\n        const {senha} = JSON.parse(storage)      \r\n        setUser(senha)  \r\n       }\r\n\r\n    }, [])\r\n\r\n\r\n\r\n    \r\n\r\n    return(\r\n      <AppContext.Provider value={{user, senha, isLoggedIn, setIsLoggedIn}}>\r\n        {children}\r\n      </AppContext.Provider>\r\n    )\r\n  }"],"mappings":";;AAAA,SAASA,aAAa,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC1D,SAASC,kBAAkB,QAAQ,qBAAqB;AAAA;AAStD,OAAO,MAAMC,UAAU,gBAAGJ,aAAa,CAAC,CAAC,CAAC,CAAgB;AAG1D,OAAO,MAAMK,kBAAkB,GAAG,QAAoB;EAAA;EAAA,IAAnB;IAACC;EAAa,CAAC;EAEhD,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGN,QAAQ,CAAU,KAAK,CAAC;EAC5D,MAAM,CAACO,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAS,EAAE,CAAC;EAC5C,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAS,EAAE,CAAC;EAE9C,MAAMW,OAAO,GAAGV,kBAAkB,EAAE;EAIpCF,SAAS,CAAC,MAAM;IAEd,IAAGY,OAAO,EAAC;MACT,MAAM;QAACC;MAAK,CAAC,GAAIC,IAAI,CAACC,KAAK,CAACH,OAAO,CAAC,EAAE;MACtCL,aAAa,CAACM,KAAK,CAAC;MACpB,MAAM;QAACG;MAAK,CAAC,GAAGF,IAAI,CAACC,KAAK,CAACH,OAAO,CAAC;MACnCH,OAAO,CAACO,KAAK,CAAC;MACd,MAAM;QAACN;MAAK,CAAC,GAAGI,IAAI,CAACC,KAAK,CAACH,OAAO,CAAC;MACnCH,OAAO,CAACC,KAAK,CAAC;IACf;EAEH,CAAC,EAAE,EAAE,CAAC;EAMN,oBACE,QAAC,UAAU,CAAC,QAAQ;IAAC,KAAK,EAAE;MAACF,IAAI;MAAEE,KAAK;MAAEJ,UAAU;MAAEC;IAAa,CAAE;IAAA,UAClEF;EAAQ;IAAA;IAAA;IAAA;EAAA,QACW;AAE1B,CAAC;AAAA,GAhCYD,kBAAkB;AAAA,KAAlBA,kBAAkB;AAAA;AAAA"},"metadata":{},"sourceType":"module"}