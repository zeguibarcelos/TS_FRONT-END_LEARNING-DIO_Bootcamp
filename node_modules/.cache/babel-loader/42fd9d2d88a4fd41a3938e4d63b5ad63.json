{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\zetub\\\\Documents\\\\React\\\\desafio-diobank\\\\src\\\\components\\\\AppContext.tsx\",\n  _s = $RefreshSig$();\nimport { createContext, useState } from \"react\";\nimport { getAllLocalStorage } from \"../services/storage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AppContext = /*#__PURE__*/createContext({});\nexport const AppContextProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const storage = getAllLocalStorage();\n  if (storage) {\n    const {\n      login\n    } = JSON.parse(storage); //converte uma string para um objeto\n    setIsLoggedIn(login);\n  }\n  const user = 'josé'; //toranando user como um estado global\n\n  return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n    value: {\n      user,\n      isLoggedIn,\n      setIsLoggedIn\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 7\n  }, this);\n};\n_s(AppContextProvider, \"g0MSgNVZk+vKiEFnDJ9VPEfswFA=\");\n_c = AppContextProvider;\nvar _c;\n$RefreshReg$(_c, \"AppContextProvider\");","map":{"version":3,"names":["createContext","useState","getAllLocalStorage","AppContext","AppContextProvider","children","isLoggedIn","setIsLoggedIn","storage","login","JSON","parse","user"],"sources":["C:/Users/zetub/Documents/React/desafio-diobank/src/components/AppContext.tsx"],"sourcesContent":["import { createContext, useState } from \"react\"\r\nimport { getAllLocalStorage } from \"../services/storage\"\r\n\r\ninterface IAppContext {\r\n    user: string,\r\n    isLoggedIn: boolean, //estado global\r\n    setIsLoggedIn: (isLoggedIn: boolean) => void\r\n  }\r\n  \r\n  export const AppContext = createContext({} as IAppContext)\r\n  \r\n  export const AppContextProvider = ({children}: any) =>{\r\n    const [isLoggedIn, setIsLoggedIn] = useState<boolean>(false)\r\n    \r\n    const storage = getAllLocalStorage()\r\n\r\n    if(storage){\r\n     const {login} =  JSON.parse(storage)  //converte uma string para um objeto\r\n     setIsLoggedIn(login)\r\n    }\r\n\r\n    const user = 'josé' //toranando user como um estado global\r\n\r\n    return(\r\n      <AppContext.Provider value={{user, isLoggedIn, setIsLoggedIn}}>\r\n        {children}\r\n      </AppContext.Provider>\r\n    )\r\n  }"],"mappings":";;AAAA,SAASA,aAAa,EAAEC,QAAQ,QAAQ,OAAO;AAC/C,SAASC,kBAAkB,QAAQ,qBAAqB;AAAA;AAQtD,OAAO,MAAMC,UAAU,gBAAGH,aAAa,CAAC,CAAC,CAAC,CAAgB;AAE1D,OAAO,MAAMI,kBAAkB,GAAG,QAAoB;EAAA;EAAA,IAAnB;IAACC;EAAa,CAAC;EAChD,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGN,QAAQ,CAAU,KAAK,CAAC;EAE5D,MAAMO,OAAO,GAAGN,kBAAkB,EAAE;EAEpC,IAAGM,OAAO,EAAC;IACV,MAAM;MAACC;IAAK,CAAC,GAAIC,IAAI,CAACC,KAAK,CAACH,OAAO,CAAC,EAAE;IACtCD,aAAa,CAACE,KAAK,CAAC;EACrB;EAEA,MAAMG,IAAI,GAAG,MAAM,EAAC;;EAEpB,oBACE,QAAC,UAAU,CAAC,QAAQ;IAAC,KAAK,EAAE;MAACA,IAAI;MAAEN,UAAU;MAAEC;IAAa,CAAE;IAAA,UAC3DF;EAAQ;IAAA;IAAA;IAAA;EAAA,QACW;AAE1B,CAAC;AAAA,GAjBYD,kBAAkB;AAAA,KAAlBA,kBAAkB;AAAA;AAAA"},"metadata":{},"sourceType":"module"}