{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\zetub\\\\Documents\\\\React\\\\desafio-diobank\\\\src\\\\pages\\\\Conta.tsx\",\n  _s = $RefreshSig$();\nimport { Button, Center, SimpleGrid, Spinner } from \"@chakra-ui/react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { api } from \"../api\";\nimport CardInfo from \"../components/CardInfo\";\nimport { AppContext } from \"../components/AppContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Conta = () => {\n  _s();\n  const [userData, setUserData] = useState();\n  const {\n    id\n  } = useParams();\n  const navigate = useNavigate();\n  const {\n    isLoggedIn\n  } = useContext(AppContext);\n  const context = useContext(AppContext);\n  console.log('retorno da página conta', isLoggedIn);\n  !isLoggedIn && navigate('/');\n  useEffect(() => {\n    const getData = async () => {\n      const data = await api;\n      setUserData(data);\n    };\n    getData();\n  }, []); //parar função async\n\n  const actualData = new Date();\n\n  //console.log(userData?.name)\n\n  if (userData && id !== userData.id) {\n    // se userData for carregado corretamente (diferente de null) e o id inserido for diferente do userData.id definido pelo api, então será redirecionado para a página inicial\n    navigate('/');\n  }\n  return /*#__PURE__*/_jsxDEV(Center, {\n    children: /*#__PURE__*/_jsxDEV(SimpleGrid, {\n      columns: 2,\n      spacing: 8,\n      paddingTop: \"16px\",\n      children: userData === null || userData === undefined ? /*#__PURE__*/_jsxDEV(Center, {\n        children: /*#__PURE__*/_jsxDEV(Spinner, {\n          size: \"xl\",\n          color: \"white\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 33\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 29\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(CardInfo, {\n          mainContent: `Bem vindo ${userData === null || userData === void 0 ? void 0 : userData.name}`,\n          content: `${actualData === null || actualData === void 0 ? void 0 : actualData.getDay()} / ${actualData === null || actualData === void 0 ? void 0 : actualData.getMonth()} / ${actualData === null || actualData === void 0 ? void 0 : actualData.getFullYear()} / ${actualData === null || actualData === void 0 ? void 0 : actualData.getHours()}:${actualData === null || actualData === void 0 ? void 0 : actualData.getMinutes()}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(CardInfo, {\n          mainContent: \"Saldo\",\n          content: `R$ ${userData === null || userData === void 0 ? void 0 : userData.balance}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => {\n            'logout()';\n          },\n          children: \"Sair\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => {\n            'logout()';\n          },\n          children: \"Sair\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n};\n_s(Conta, \"RjNbOkfTYZ1+P2OtDo7C7Sz/pDM=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = Conta;\nexport default Conta;\nvar _c;\n$RefreshReg$(_c, \"Conta\");","map":{"version":3,"names":["Button","Center","SimpleGrid","Spinner","useParams","useNavigate","useContext","useEffect","useState","api","CardInfo","AppContext","Conta","userData","setUserData","id","navigate","isLoggedIn","context","console","log","getData","data","actualData","Date","undefined","name","getDay","getMonth","getFullYear","getHours","getMinutes","balance"],"sources":["C:/Users/zetub/Documents/React/desafio-diobank/src/pages/Conta.tsx"],"sourcesContent":["import { Button, Center, SimpleGrid, Spinner } from \"@chakra-ui/react\"\r\nimport { useParams, useNavigate } from \"react-router-dom\"\r\nimport { useContext, useEffect, useState } from \"react\"\r\nimport { api } from \"../api\"\r\nimport CardInfo from \"../components/CardInfo\"\r\nimport { AppContext } from \"../components/AppContext\"\r\n\r\ninterface UserData {\r\n    email: string\r\n    password: string\r\n    name: string,\r\n    balance: number,\r\n    id: string\r\n}\r\n\r\nconst Conta = () =>{\r\n    const [userData, setUserData] = useState<null | UserData>()\r\n    const {id} = useParams()\r\n    const navigate = useNavigate()\r\n\r\n    const {isLoggedIn} = useContext(AppContext)\r\n\r\n    const context = useContext(AppContext)\r\n    console.log('retorno da página conta', isLoggedIn)\r\n    \r\n    !isLoggedIn && navigate('/')\r\n\r\n    useEffect(() =>{\r\n        const getData = async () => {\r\n            const data: any | UserData = await api\r\n            setUserData(data)\r\n        }\r\n        getData()\r\n    }, []) //parar função async\r\n\r\n    const actualData = new Date()\r\n\r\n    //console.log(userData?.name)\r\n\r\n    \r\n\r\n\r\n    if(userData && id !== userData.id){ // se userData for carregado corretamente (diferente de null) e o id inserido for diferente do userData.id definido pelo api, então será redirecionado para a página inicial\r\n        navigate('/')\r\n    }\r\n    return (\r\n        <Center>\r\n            <SimpleGrid columns={2} spacing={8} paddingTop='16px'>\r\n                {\r\n                    userData === null || userData === undefined\r\n                        ? (\r\n                            <Center>\r\n                                <Spinner size='xl' color='white' />\r\n                            </Center>\r\n                        ) :\r\n                        <>\r\n                        <CardInfo mainContent={`Bem vindo ${userData?.name}`} content={`${actualData?.getDay()} / ${actualData?.getMonth()} / ${actualData?.getFullYear()} / ${actualData?.getHours()}:${actualData?.getMinutes()}`} />\r\n                        <CardInfo mainContent = 'Saldo' content = {`R$ ${userData?.balance}`}/>\r\n                        <Button onClick={() => {\r\n                            'logout()'\r\n                        }}>\r\n                            Sair\r\n                        </Button>\r\n                        <Button onClick={() => {\r\n                            'logout()'\r\n                        }}>\r\n                            Sair\r\n                        </Button>\r\n                        </>\r\n                }\r\n            </SimpleGrid>\r\n        </Center>\r\n    )\r\n}\r\n\r\nexport default Conta"],"mappings":"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"},"metadata":{},"sourceType":"module"}